CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(NAME "3DMultiplayerShooter")

set(CMAKE_EXPORT_COMPILE_COMMANDS "ON")

FILE(GLOB SOURCES "src/*.cpp" "src/entity/*.cpp")

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF()
MESSAGE("${CMAKE_BUILD_TYPE}")

#unix
IF (UNIX AND NOT ANDROID AND NOT EMSCRIPTEN AND NOT WIN32)
  MESSAGE("Unix build")

  ADD_EXECUTABLE(${NAME} "${SOURCES}")

  INCLUDE_DIRECTORIES("include")

  ADD_DEFINITIONS(-DNAME="${NAME}")

  #-fsanitize=address
  SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -pg -fsanitize=address")
  SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} -s")
  SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -s -O3")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGLEW_STATIC -std=c++11 -Wall")

  SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/build/")

  FIND_PACKAGE (glfw3 REQUIRED)
  FIND_PACKAGE (GLEW)
  INCLUDE_DIRECTORIES (${GLFW_INCLUDE_DIR})
  INCLUDE_DIRECTORIES (${GLEW_INCLUDE_DIR})
  
  TARGET_LINK_LIBRARIES(${NAME} GL GLU GLEW glfw X11 Xxf86vm Xrandr pthread Xi dl Xinerama Xcursor)


ENDIF()

#windows
IF (WIN32 AND NOT ANDROID AND NOT EMSCRIPTEN)
  MESSAGE("Windows build")

  IF (UNIX)
    SET(CMAKE_SYSTEM_NAME i686-w64-mingw32)
    SET(CMAKE_SYSTEM_VERSION 1)
    SET(CMAKE_C_COMPILER /usr/bin/i686-w64-mingw32-gcc)
    SET(CMAKE_CXX_COMPILER /usr/bin/i686-w64-mingw32-g++)
    SET(CMAKE_FIND_ROOT_PATH /usr/i686-w64-mingw32/)
    SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
    SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
    SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
  ENDIF()

  ADD_EXECUTABLE(${NAME} ${SOURCES})

  SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} -s")
  SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -s")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++ -DGLEW_STATIC -std=c++11 -Wall")

  SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/build/windows/")

  INCLUDE_DIRECTORIES (/home/zyper/Programming/BitEngine/windows_libs/glfw3/include/)
  INCLUDE_DIRECTORIES (/home/zyper/Programming/BitEngine/windows_libs/glew/include/)
  
  TARGET_LINK_LIBRARIES(${NAME} opengl32 gdi32 ws2_32 dl)
ENDIF()
